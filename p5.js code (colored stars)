function setup() {
  createCanvas(600, 600, WEBGL);
  background(255);
  noStroke();

  let maxDiameter = 300;
  let numCircles = 12;
  let step = maxDiameter / numCircles;
  let radius = 150;
  let offsetAngle = -HALF_PI;
  let angles = [offsetAngle, offsetAngle + TWO_PI / 5, offsetAngle + 2 * TWO_PI / 5, offsetAngle + 3 * TWO_PI / 5, offsetAngle + 4 * TWO_PI / 5];
  
  for (let i = 0; i < numCircles; i++) {
    let currentColor;
    if (i % 2 === 0) {
      currentColor = color(235,220,220);
    } else {
      currentColor = color(175,0,175);
    }
    fill(currentColor);
    let diameter = maxDiameter - (i * step);
    for (let j = 0; j < 5; j++) {
      let x = radius * cos(angles[j]);
      let y = radius * sin(angles[j]);
    circle(x, y, diameter);
    }
    for (let j = 0; j < 5; j++) {
      let x = radius * cos(angles[j]);
      let y = radius * sin(angles[j]);
      if (currentColor.levels[1] === 0) {
        fill(235,220,220);
      } else {
        fill(175,0,175);
      }
      let startAngle = angles[j] - radians(28.5)+PI;
      let endAngle = angles[j] + radians(28.5)+PI;
      arc(x, y, diameter, diameter, startAngle, endAngle);
  }
      for (let k = 0; k < 7; k++) {
      let x = radius * cos(angles[k]);
      let y = radius * sin(angles[k]);
      if (currentColor.levels[1] === 0) {
        fill(235,220,220);
      } else {
        fill(175,0,175);
      }
      let startAngle2 = angles[k] - radians(72);
      let endAngle2 = angles[k] + radians(72);
      arc(x, y, diameter, diameter, startAngle2, endAngle2);
    }
  }
}
