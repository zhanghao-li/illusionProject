let sizes = [10, 5, 25, 50];
let currentSizeIndex = 0;
function setup() {
  createCanvas(400, 400);
}
function draw() {
  background(220);
  noStroke();
  for (let i = 0; i < 2; i++) {
    for (let j = 0; j < 2; j++) {
      drawShape(i * 200, j * 200);
    }
  }
}

function drawShape(offsetX, offsetY) {
  let c = sizes[currentSizeIndex];
  let A;

  if (c === 10) {
    A = [0, c * 2, c * 4];
  } else if (c === 5) {
    A = [0, c * 2, c * 4, c * 6, c * 8];
  } else if (c === 25) {
    A = [0];
  } else if (c === 50) {
    A = [0];
  }
  for (let a of A) {
    let B = [100];
    for (let b of B) {
      fill(0);
triangle(offsetX+a,offsetY+a,offsetX+b-a,offsetY+a,offsetX+a,offsetY+b-a);
  triangle(offsetX+b+a,offsetY+a,offsetX+b*2-a,offsetY+b-a,offsetX+b+a,offsetY+b-a);
  triangle(offsetX+a,offsetY+b+a,offsetX+b-a,offsetY+b+a,offsetX+b-a,offsetY+b*2-a);
  triangle(offsetX+b*2-a,offsetY+b*2-a,offsetX+b*2-a,offsetY+b+a,offsetX+b+a,offsetY+b*2-a);
  fill(255)
  triangle(offsetX+a+c,offsetY+a+c,offsetX+b-c-a,offsetY+a+c,offsetX+a+c,offsetY+b-c-a);
  triangle(offsetX+b+c+a,offsetY+a+c,offsetX+b*2-c-a,offsetY+b-c-a,offsetX+b+c+a,offsetY+b-c-a);
  triangle(offsetX+a+c,offsetY+b+c+a,offsetX+b-c-a,offsetY+b+c+a,offsetX+b-c-a,offsetY+b*2-c-a);
  triangle(offsetX+b+a,offsetY+b+a,offsetX+b*2-a,offsetY+b+a,offsetX+b+a,offsetY+b*2-a);
  fill(255)
  triangle(offsetX+b-a,offsetY+b-a,offsetX+b-a,offsetY+a,offsetX+a,offsetY+b-a);
  triangle(offsetX+b*2-a,offsetY+b-a,offsetX+b*2-a,offsetY+a,offsetX+b+a,offsetY+a);
  triangle(offsetX+b-a,offsetY+b*2-a,offsetX+a,offsetY+b+a,offsetX+a,offsetY+b*2-a); 
  triangle(offsetX+b*2-c-a,offsetY+b*2-c-a,offsetX+b*2-c-a,offsetY+b+c+a,offsetX+b+c+a,offsetY+b*2-c-a);
  fill(0)
  triangle(offsetX+b-c-a,offsetY+b-c-a,offsetX+b-c-a,offsetY+a+c,offsetX+a+c,offsetY+b-c-a);
  triangle(offsetX+b*2-c-a,offsetY+b-c-a,offsetX+b*2-c-a,offsetY+a+c,offsetX+b+c+a,offsetY+a+c);
  triangle(offsetX+b-c-a,offsetY+b*2-c-a,offsetX+a+c,offsetY+b+c+a,offsetX+a+c,offsetY+b*2-c-a);
  triangle(offsetX+b+c+a,offsetY+b+c+a,offsetX+b*2-c-a,offsetY+b+c+a,offsetX+b+c+a,offsetY+b*2-c-a);
    }
  }
}

function mousePressed() {
  // 每次點擊畫面時更改三角形大小的索引
  currentSizeIndex = (currentSizeIndex + 1) % sizes.length; // 循環選擇大小
  }
